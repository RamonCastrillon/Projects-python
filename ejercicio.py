# -*- coding: utf-8 -*-
"""Ejercicio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oZAuuL7_BVbcnb0VyESAmRz55KvoEPGx
"""

import random
import numpy as np

def funcion(lista):
  lista_valida = []

  #Validación lista
  if type(lista) == list:

    #Validación de contenido
    for elemento in lista:

      #Validación de que solo hayan numeros en la lista
      if type(elemento) == int:
        lista_valida.append(elemento)

        #Validación de que los numeros estén entre -999 y 999
        if (elemento >= -999) and (elemento <= 999):
          promedio = np.mean(lista_valida)
          varianza = np.var(lista_valida)

          multiplos_3_7 = []
          contador_pares = 0
          contador_impares = 0
          contador_3_digitos = 0
          contador_digitos_diferentes = 0
          cercano_promedio = 0
          lejano_promedio = 0
          distancia = 2000
          distancia_lejano = 0

          for numero in lista_valida:

            #Busqueda de numeros multiplos del 3 y el 7
            if ((numero % 3)==0) and ((numero % 7)==0):
              multiplos_3_7.append(numero)

            #Busqueda de numeros pares e impares
            if (numero % 2) == 0:
              contador_pares+=1
            else:
              contador_impares+=1

            #Busqueda de numeros de 3 digitos
            if (abs(numero)//100) >= 1:
              contador_3_digitos += 1
              numero_texto = str(abs(numero))

              #Busqueda de todos digitos distintos
              if (numero_texto[0]!= numero_texto[1]) and (numero_texto[0] != numero_texto[2]) and (numero_texto[1]!=numero_texto[2]):
                contador_digitos_diferentes += 1

            #Busqueda de numero mas cercano y mas lejano al promedio
            if ((numero < 0) and (promedio < 0)) or ((numero>=0)and(promedio>=0)):
              if abs((abs(numero)-abs(promedio))) < distancia:
                distancia = abs(abs(numero)-abs(promedio))
                cercano_promedio = numero

              if abs((abs(numero)-abs(promedio)))>distancia_lejano:
                distancia_lejano = abs(numero)-abs(promedio)
                lejano_promedio = numero

            elif ((numero < 0) and (promedio>= 0)) or ((numero >= 0) and (promedio<= 0)):
              distancia_0 = abs(numero)
              if (distancia_0+abs(promedio)) < distancia:
                distancia = distancia_0+abs(promedio)
                cercano_promedio = numero

              if (distancia_0+abs(promedio)) > distancia_lejano:
                distancia_lejano = distancia_0+abs(promedio)
                lejano_promedio = numero

          promedio_multiplos_3_7 = np.mean(multiplos_3_7)

          #Tupla Resultante
          resultados = (promedio,varianza,promedio_multiplos_3_7,contador_pares,contador_impares,contador_3_digitos,contador_digitos_diferentes,cercano_promedio,lejano_promedio)

        else:
          print("La lista ingresada no es válida, debido a que contiene numeros enteros fuera del rango de -999 y 999")
          return None
      else:
        print("La lista ingresada no es válida, asegurese de que contenga solo numeros enteros")
        return None
  else:
    print(f"ERROR. Tipo: {type(lista)} no es válido")
    return None

  return resultados

lista_aleatoria = []

#Generacion de lista
for i in range(10000):
  lista_aleatoria.append(random.randint(-999,999))

#resultado = funcion("a")
#resultado = funcion({"abc":9})
#resultado = funcion([1,"a",2,"b"])
resultado = funcion(lista_aleatoria)

if resultado != None:
  print(f"La tupla con los resultados almacenados es:\n{resultado}")
  print(f"\nEl promedio de la lista es: {resultado[0]}")
  print(f"La varianza de la lista es: {resultado[1]}")
  print(f"El promedio de los multiplos de 3 y 7 es: {resultado[2]}")
  print(f"La cantidad de numeros pares es: {resultado[3]}")
  print(f"La cantidad de numeros impares es: {resultado[4]}")
  print(f"La cantidad de numeros de tres digitos es: {resultado[5]}")
  print(f"La cantidad de numeros de tres digitos con todos sus digitos diferentes es: {resultado[6]}")
  print(f"El numero mas cercano del promedio es: {resultado[7]}")
  print(f"el numero mas lejano del promedio es es: {resultado[8]}")